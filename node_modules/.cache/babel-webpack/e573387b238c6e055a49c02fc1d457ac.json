{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"src/app/service/requests.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction ForgotpasswordComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.validationFieldMessage.email);\n  }\n}\n\nexport let ForgotpasswordComponent = /*#__PURE__*/(() => {\n  class ForgotpasswordComponent {\n    constructor(spinner, request, route) {\n      this.spinner = spinner;\n      this.request = request;\n      this.route = route;\n      this.validationMapping = {\n        'email': {\n          required: \"Email is required\",\n          pattern: \"Email is invalid\"\n        },\n        'password': {\n          required: \"Password is required\"\n        }\n      };\n      this.validationField = false;\n      this.validationFieldMessage = {};\n    }\n\n    ngOnInit() {\n      this.initializeForm();\n    }\n\n    onSubmit() {\n      this.spinner.show();\n\n      if (this.forgotpasswordform.valid) {\n        this.spinner.hide();\n        console.log(this.forgotpasswordform.value);\n        this.request.Post('login', this.forgotpasswordform.value).subscribe(res => {\n          localStorage.setItem(\"token\", res.data.token);\n          this.route.navigate(['/admin/dashboard']);\n        }, err => {\n          console.log(err);\n        });\n      } else {\n        if (this.GetErrorsFromFormGroup(this.forgotpasswordform, this.validationMapping)) {\n          this.validationField = true;\n          this.validationFieldMessage = this.GetErrorsFromFormGroup(this.forgotpasswordform, this.validationMapping);\n          this.spinner.hide();\n        }\n      }\n    }\n\n    initializeForm() {\n      this.forgotpasswordform = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.pattern(\"^(([\\\\w-]+\\\\.)+[\\\\w-]+|([a-zA-Z]{1}|[\\\\w-]{2,100}))@((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|([a-zA-Z0-9]+[\\\\w-]+\\\\.)+[a-zA-Z]{2,9})$\")])\n      });\n    }\n\n    GetErrorsFromFormGroup(formgroup, errorMapping) {\n      var Errors = [];\n      Object.keys(formgroup.controls).forEach(key => {\n        var _a;\n\n        const controlErrors = (_a = formgroup.get(key)) === null || _a === void 0 ? void 0 : _a.errors;\n        if (controlErrors != null) Object.keys(controlErrors).forEach(keyError => {\n          Errors[key] = errorMapping[key][keyError];\n        });\n      });\n      return Errors;\n    }\n\n  }\n\n  ForgotpasswordComponent.ɵfac = function ForgotpasswordComponent_Factory(t) {\n    return new (t || ForgotpasswordComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.RequestsService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  ForgotpasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotpasswordComponent,\n    selectors: [[\"app-forgotpassword\"]],\n    decls: 21,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xl-10\", \"col-lg-12\", \"col-md-9\"], [1, \"card\", \"o-hidden\", \"border-0\", \"shadow-lg\", \"my-5\"], [1, \"card-body\", \"p-0\"], [1, \"row\"], [1, \"col-lg-6\", \"mx-auto\"], [1, \"p-5\"], [1, \"text-center\"], [1, \"h4\", \"text-gray-900\", \"mb-4\"], [1, \"user\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"email\", \"id\", \"exampleInputEmail\", \"formControlName\", \"email\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter Email Address...\", 1, \"form-control\", \"form-control-user\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-user\", \"btn-block\"], [\"href\", \"login\", 1, \"small\"], [1, \"text-danger\"]],\n    template: function ForgotpasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelementStart(9, \"h1\", 9);\n        i0.ɵɵtext(10, \"Welcome Back!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotpasswordComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelement(13, \"input\", 12);\n        i0.ɵɵtemplate(14, ForgotpasswordComponent_small_14_Template, 2, 1, \"small\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 14);\n        i0.ɵɵtext(16, \" Forgot Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"hr\");\n        i0.ɵɵelementStart(18, \"div\", 8);\n        i0.ɵɵelementStart(19, \"a\", 15);\n        i0.ɵɵtext(20, \"Login?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotpasswordform);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.validationField);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i5.NgIf],\n    styles: [\"\"]\n  });\n  return ForgotpasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}