{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"src/app/service/requests.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction AddLocationComponent_small_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.validationFieldMessage.location);\n  }\n}\n\nfunction AddLocationComponent_input_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 16);\n  }\n}\n\nfunction AddLocationComponent_input_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 17);\n  }\n}\n\nexport let AddLocationComponent = /*#__PURE__*/(() => {\n  class AddLocationComponent {\n    constructor(spinner, request, route, toastr, activetedrouter) {\n      this.spinner = spinner;\n      this.request = request;\n      this.route = route;\n      this.toastr = toastr;\n      this.activetedrouter = activetedrouter;\n      this.validationMapping = {\n        'name': {\n          required: \"Name is required\"\n        },\n        'image': {\n          required: \"Image is required\"\n        }\n      };\n      this.validationField = false;\n      this.validationFieldMessage = {};\n      this.locationId = 0;\n      this.status = \"\";\n      this.selected = \"\";\n    }\n\n    ngOnInit() {\n      this.showCategory();\n      this.initializeForm();\n    }\n\n    showCategory() {\n      this.activetedrouter.params.subscribe(res => {\n        this.locationId = res.id;\n\n        if (this.locationId) {\n          this.request.Get('view-location/' + this.locationId).subscribe(res => {\n            console.log(res.data);\n            this.locationForm.patchValue({\n              location: res.data.location,\n              status: res.data.status\n            });\n\n            if (res.data.status == 1) {\n              this.status = \"checked\";\n            } else {\n              this.status = \"\";\n            }\n          }, err => {\n            console.log(err);\n          });\n        }\n      });\n    }\n\n    onSubmit() {\n      this.spinner.show();\n\n      if (this.locationForm.valid) {\n        let url = '';\n\n        if (this.locationId == 0 || this.locationId == undefined || this.locationId == null) {\n          url = 'add-location';\n        } else {\n          url = 'edit-location/' + this.locationId;\n        }\n\n        this.request.Post(url, this.locationForm.value).subscribe(res => {\n          this.toastr.success(res.message);\n          this.showCategory();\n          this.route.navigate(['/admin/view-location']);\n        }, err => {\n          console.log(err); // this.toastr.error(err.error.errors);\n        });\n      } else {\n        if (this.GetErrorsFromFormGroup(this.locationForm, this.validationMapping)) {\n          this.validationField = true;\n          this.validationFieldMessage = this.GetErrorsFromFormGroup(this.locationForm, this.validationMapping);\n          this.spinner.hide();\n        }\n      }\n    }\n\n    initializeForm() {\n      this.locationForm = new FormGroup({\n        location: new FormControl('', [Validators.required]),\n        status: new FormControl('')\n      });\n    }\n\n    GetErrorsFromFormGroup(formgroup, errorMapping) {\n      var Errors = [];\n      Object.keys(formgroup.controls).forEach(key => {\n        var _a;\n\n        const controlErrors = (_a = formgroup.get(key)) === null || _a === void 0 ? void 0 : _a.errors;\n        if (controlErrors != null) Object.keys(controlErrors).forEach(keyError => {\n          Errors[key] = errorMapping[key][keyError];\n        });\n        setTimeout(() => {\n          this.validationField = false;\n          this.validationFieldMessage = \"\";\n        }, 3000);\n      });\n      return Errors;\n    }\n\n  }\n\n  AddLocationComponent.ɵfac = function AddLocationComponent_Factory(t) {\n    return new (t || AddLocationComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.RequestsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  AddLocationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddLocationComponent,\n    selectors: [[\"app-add\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"container-md\"], [1, \"row\"], [1, \"col-12\", \"col-lg-8\"], [1, \"py-5\"], [1, \"text-left\"], [1, \"h4\", \"text-gray-900\", \"mb-4\"], [1, \"user\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\", \"aria-describedby\", \"location\", \"placeholder\", \"Enter location Name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"custom-control\", \"custom-checkbox\", \"small\"], [\"type\", \"checkbox\", \"class\", \"custom-control-input\", \"id\", \"customCheck\", \"formControlName\", \"status\", \"checked\", \"\", 4, \"ngIf\"], [\"type\", \"checkbox\", \"class\", \"custom-control-input\", \"id\", \"customCheck\", \"formControlName\", \"status\", 4, \"ngIf\"], [\"for\", \"customCheck\", 1, \"custom-control-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-user\", \"btn-block\"], [1, \"text-danger\"], [\"type\", \"checkbox\", \"id\", \"customCheck\", \"formControlName\", \"status\", \"checked\", \"\", 1, \"custom-control-input\"], [\"type\", \"checkbox\", \"id\", \"customCheck\", \"formControlName\", \"status\", 1, \"custom-control-input\"]],\n    template: function AddLocationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"h1\", 5);\n        i0.ɵɵtext(6, \"Add Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AddLocationComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelement(9, \"input\", 8);\n        i0.ɵɵtemplate(10, AddLocationComponent_small_10_Template, 2, 1, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵtemplate(13, AddLocationComponent_input_13_Template, 1, 0, \"input\", 11);\n        i0.ɵɵtemplate(14, AddLocationComponent_input_14_Template, 1, 0, \"input\", 12);\n        i0.ɵɵelementStart(15, \"label\", 13);\n        i0.ɵɵtext(16, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 14);\n        i0.ɵɵtext(18, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.locationForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.validationField);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.status);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgIf, i5.CheckboxControlValueAccessor],\n    styles: [\"\"]\n  });\n  return AddLocationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}