{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"src/app/service/requests.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction UserLoginComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.validationFieldMessage.email);\n  }\n}\n\nfunction UserLoginComponent_small_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.validationFieldMessage.password);\n  }\n}\n\nexport let UserLoginComponent = /*#__PURE__*/(() => {\n  class UserLoginComponent {\n    constructor(spinner, request, route, toastr) {\n      this.spinner = spinner;\n      this.request = request;\n      this.route = route;\n      this.toastr = toastr;\n      this.validationMapping = {\n        'email': {\n          required: \"Email is required\",\n          pattern: \"Email is invalid\"\n        },\n        'password': {\n          required: \"Password is required\"\n        }\n      };\n      this.validationField = false;\n      this.validationFieldMessage = {};\n    }\n\n    ngOnInit() {\n      this.initializeForm();\n    }\n\n    onSubmit() {\n      this.spinner.show();\n\n      if (this.loginform.valid) {\n        this.spinner.hide();\n        this.request.Post('user/login', this.loginform.value).subscribe(res => {\n          console.log(res.data);\n          localStorage.setItem(\"user-name\", JSON.stringify(res.data));\n          localStorage.setItem(\"user-token\", res.data.token);\n          this.route.navigate(['/user/dashboard']);\n\n          if (this.request.loggedIn()) {\n            this.request.visible = true;\n          }\n        }, err => {\n          this.toastr.error(err.error.errors.email[0]);\n          console.log(err);\n        });\n      } else {\n        if (this.GetErrorsFromFormGroup(this.loginform, this.validationMapping)) {\n          this.validationField = true;\n          this.validationFieldMessage = this.GetErrorsFromFormGroup(this.loginform, this.validationMapping);\n          this.spinner.hide();\n        }\n      }\n    }\n\n    initializeForm() {\n      this.loginform = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.pattern(\"^(([\\\\w-]+\\\\.)+[\\\\w-]+|([a-zA-Z]{1}|[\\\\w-]{2,100}))@((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|([a-zA-Z0-9]+[\\\\w-]+\\\\.)+[a-zA-Z]{2,9})$\")]),\n        password: new FormControl('', [Validators.required])\n      });\n    }\n\n    GetErrorsFromFormGroup(formgroup, errorMapping) {\n      var Errors = [];\n      Object.keys(formgroup.controls).forEach(key => {\n        var _a;\n\n        const controlErrors = (_a = formgroup.get(key)) === null || _a === void 0 ? void 0 : _a.errors;\n        if (controlErrors != null) Object.keys(controlErrors).forEach(keyError => {\n          Errors[key] = errorMapping[key][keyError];\n        });\n      });\n      return Errors;\n    }\n\n  }\n\n  UserLoginComponent.ɵfac = function UserLoginComponent_Factory(t) {\n    return new (t || UserLoginComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.RequestsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  UserLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserLoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 23,\n    vars: 3,\n    consts: [[1, \"container\", \"register-form\", \"py-5\"], [1, \"form\", \"card\", \"shadow-sm\", \"p-3\", \"mb-5\", \"bg-body\", \"rounded\", \"col-md-6\", \"mx-auto\"], [1, \"note\"], [1, \"form-content\", \"py-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"form-group\"], [\"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Your Email *\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Your Password *\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/user/register\"], [1, \"text-danger\"]],\n    template: function UserLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UserLoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, UserLoginComponent_small_11_Template, 2, 1, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7);\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵtemplate(14, UserLoginComponent_small_14_Template, 2, 1, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"button\", 12);\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵtext(20, \"Or\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"a\", 13);\n        i0.ɵɵtext(22, \"registration?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginform);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.validationField);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.validationField);\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgIf, i3.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return UserLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}