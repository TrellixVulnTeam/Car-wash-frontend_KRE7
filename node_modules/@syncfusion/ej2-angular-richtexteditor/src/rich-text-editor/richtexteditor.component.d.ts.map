{"version":3,"file":"richtexteditor.component.d.ts","sources":["richtexteditor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { RichTextEditor } from '@syncfusion/ej2-richtexteditor';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * `ejs-richtexteditor` represents the Angular richtexteditor Component.\n * ```html\n * <ejs-richtexteditor></ejs-richtexteditor>\n * ```\n */\nexport declare class RichTextEditorComponent extends RichTextEditor implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    formCompContext: any;\n    formContext: any;\n    tagObjects: any;\n    actionBegin: any;\n    actionComplete: any;\n    afterImageDelete: any;\n    afterPasteCleanup: any;\n    beforeDialogClose: any;\n    beforeDialogOpen: any;\n    beforeImageDrop: any;\n    beforeImageUpload: any;\n    beforePasteCleanup: any;\n    beforeQuickToolbarOpen: any;\n    beforeSanitizeHtml: any;\n    blur: any;\n    change: any;\n    created: any;\n    destroyed: any;\n    dialogClose: any;\n    dialogOpen: any;\n    focus: any;\n    imageRemoving: any;\n    imageSelected: any;\n    imageUploadFailed: any;\n    imageUploadSuccess: any;\n    imageUploading: any;\n    quickToolbarClose: any;\n    quickToolbarOpen: any;\n    resizeStart: any;\n    resizeStop: any;\n    resizing: any;\n    toolbarClick: any;\n    toolbarStatusUpdate: any;\n    updatedToolbarStatus: any;\n    valueChange: any;\n    /**\n     * Accepts the template design and assigns it as RichTextEditorâ€™s content.\n     * The built-in template engine which provides options to compile template string into a executable function.\n     * For EX: We have expression evolution as like ES6 expression string literals\n     *\n     * {% codeBlock src='rich-text-editor/value-template/index.md' %}{% endcodeBlock %}\n     *\n     * @default null\n     */\n    valueTemplate: any;\n    private skipFromEvent;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    registerOnChange(registerFunction: (_: any) => void): void;\n    registerOnTouched(registerFunction: () => void): void;\n    writeValue(value: any): void;\n    setDisabledState(disabled: boolean): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}