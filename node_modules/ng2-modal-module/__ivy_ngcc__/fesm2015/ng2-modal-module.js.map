{"version":3,"file":"ng2-modal-module.js","sources":["ng2-modal-module/lib/ng2-modal-window.ts","ng2-modal-module/lib/ng2-modal-window/ng2-modal-window.component.ts","ng2-modal-module/lib/modal.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { PubSubDistinct } from 'pubsub-distinct';\n\nexport class Ng2ModalWindow {\n\n  static showModal(modalId: string, options: any = {}): void {\n    options.show = true;\n    options.hide = null;\n    PubSubDistinct.publishDistinct(modalId, options);\n  }\n\n  static hideModal(modalId: string): void {\n    let options: any = {hide: true};\n    PubSubDistinct.publishDistinct(modalId, options);\n  }\n\n  static resetEventsSubscribers(eventsList: any[]): void {\n    eventsList.forEach((eventName: string) => {\n      if (eventName && PubSubDistinct.hasSubscribers(eventName)) {\n        PubSubDistinct.dispose(eventName);\n      }\n    });\n  }\n\n  static subscribe(eventName: string, callback: (data?: any) => any): void {\n    PubSubDistinct.subscribe(eventName, callback);\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ComponentInjector } from 'component-injector';\nimport { PubSubDistinct, Subscription } from 'pubsub-distinct';\nimport { XDomUtil } from 'xdom-util';\n\n@Component({\n  selector: 'ng2-modal-window',\n  templateUrl: './ng2-modal-window.component.html',\n  styleUrls: ['./ng2-modal-window.component.css']\n})\nexport class Ng2ModalWindowComponent implements OnInit, OnDestroy {\n  @ViewChild('modalWindow', {static: true}) modalWindow: ElementRef;\n  @ViewChild('injectContainer', {read: ViewContainerRef, static: true}) injectContainer: ViewContainerRef;\n  @Input() animationClass: string = 'fade';\n  protected showModalClass: string = 'in';\n  protected bodyOpenModalClass: string = 'modal-open';\n  protected eventSubscriber: Subscription;\n  protected injectedComponentRef: ComponentRef<any>;\n  protected defaultProperties: any = {\n    title: '',\n    show: false,\n    showEvent: false,\n    hide: false,\n    componentSelector: false,\n    componentInputs: false,\n    htmlContent: '',\n    overlayClick: true,\n    customClass: '',\n    buttons: {\n      visible: true,\n      cancel: {\n        visible: true,\n        label: 'Cancel',\n        event: false\n      },\n      success: {\n        visible: true,\n        label: 'Save',\n        event: false\n      }\n    }\n  };\n  properties: any = {};\n  protected eventName: string;\n\n  constructor(protected componentInjector: ComponentInjector) {\n  }\n\n  @Input() set id(eventName: string) {\n    if (eventName) {\n      this.eventName = eventName;\n      // remove previous subscription and create new one\n      this.unsubscribe();\n      this.subscribeToEvent();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe();\n    this.resetInjectedComponent();\n  }\n\n  cancelAction(): void {\n    if (this.properties.buttons.cancel.event) {\n      PubSubDistinct.publishDistinct(this.properties.buttons.cancel.event, true);\n    }\n    this.hide();\n  }\n\n  successAction(): void {\n    if (this.properties.buttons.success.event) {\n      PubSubDistinct.publishDistinct(this.properties.buttons.success.event, true);\n    }\n    else {\n      this.hide();\n    }\n  }\n\n  overlayClick(): void {\n    if (this.properties.overlayClick) {\n      this.cancelAction();\n    }\n  }\n\n  protected show(): void {\n    // add class to modal DOM element to make it visible\n    let modalDom = this.modalWindow.nativeElement;\n    if (!XDomUtil.hasClass(modalDom, this.showModalClass)) {\n      XDomUtil.addClass(modalDom, this.showModalClass);\n    }\n\n    // add class to modal body to disable the scrolling\n    let body = document.querySelector('body');\n    if (!XDomUtil.hasClass(body, this.bodyOpenModalClass)) {\n      XDomUtil.addClass(body, this.bodyOpenModalClass);\n    }\n\n    if (this.properties.showEvent) {\n      PubSubDistinct.publishDistinct(this.properties.showEvent, true);\n    }\n  }\n\n  protected hide(): void {\n    let element = this.modalWindow.nativeElement;\n    XDomUtil.removeClass(element, this.showModalClass);\n\n    let body = document.querySelector('body');\n    XDomUtil.removeClass(body, this.bodyOpenModalClass);\n  }\n\n\n  protected subscribeToEvent(): void {\n    this.eventSubscriber = PubSubDistinct.subscribe(this.eventName, (data: any) => {\n      this.initModal(data);\n    });\n  }\n\n  protected initModal(properties: any): void {\n    if (properties.show) {\n      // remove previously injected component\n      this.resetInjectedComponent();\n      // reset the properties\n      this.setProperties(properties);\n      // inject component\n      if (this.properties.componentSelector) {\n        this.injectedComponentRef = this.injectComponent(this.properties.componentSelector);\n        // set the components properties\n        this.setComponentProperties();\n      }\n      // display the modal\n      this.show();\n      // reset modal event subscriber\n      this.resetModalEventSubscriber();\n    }\n    else if (properties.hide) {\n      // remove previously injected component\n      this.resetInjectedComponent();\n      // reset the properties\n      this.setProperties(properties);\n      // hide the modal\n      this.hide();\n      // reset modal event subscriber\n      this.resetModalEventSubscriber();\n    }\n  }\n\n  protected unsubscribe(): void {\n    if (this.eventSubscriber) {\n      PubSubDistinct.unsubscribe(this.eventSubscriber);\n    }\n  }\n\n  protected injectComponent(componentSelector: string): ComponentRef<any> {\n    let result: ComponentRef<any>;\n    if (componentSelector) {\n      result = this.componentInjector.inject(this.injectContainer, componentSelector);\n    }\n\n    return result;\n  }\n\n  protected setComponentProperties(): void {\n    if (this.properties.componentInputs && this.injectedComponentRef) {\n      this.componentInjector.setProperties(this.injectedComponentRef, this.properties.componentInputs);\n    }\n  }\n\n  private resetInjectedComponent(): void {\n    if (this.injectedComponentRef) {\n      this.componentInjector.remove(this.injectedComponentRef);\n      this.injectedComponentRef = null;\n    }\n  }\n\n  private setProperties(properties: any): void {\n    this.properties = {...this.defaultProperties, ...properties};\n  }\n\n  private resetModalEventSubscriber(): void {\n    // reset modal show/hide display\n    PubSubDistinct.publishDistinct(this.eventName, {});\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TrustHtmlModule } from 'trust-html';\nimport { Ng2ModalWindowComponent } from './ng2-modal-window/ng2-modal-window.component';\n\n@NgModule({\n  declarations: [Ng2ModalWindowComponent],\n  imports: [\n    CommonModule,\n    TrustHtmlModule\n  ],\n  exports: [Ng2ModalWindowComponent]\n})\nexport class ModalModule { }\n"]}